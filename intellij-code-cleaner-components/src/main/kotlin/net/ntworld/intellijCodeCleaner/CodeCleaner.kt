package net.ntworld.intellijCodeCleaner

import net.ntworld.codeCleaner.CoreInfrastructure
import net.ntworld.codeCleaner.components.AutoGeneratedInfrastructureProvider
import net.ntworld.foundation.*
import net.ntworld.foundation.util.UUIDGenerator
import kotlin.reflect.KClass

// @Use(settings = net.ntworld.codeCleaner.)
class CodeCleaner private constructor() : InfrastructureProvider() {
    private val included = listOf(
        CoreInfrastructure(this.eventBus())
    )

    init {
        wire(this.root, this.included)
    }

    override fun <T : Any> idGeneratorOf(type: KClass<T>) = UUIDGenerator

    override fun eventBus(): EventBus {
        return AutoGeneratedInfrastructureProvider(DefaultDispatcher).eventBus()
    }

    companion object {
        private val instance = MemorizedInfrastructure(CodeCleaner())

        operator fun invoke(): Infrastructure {
            return instance
        }
    }
}